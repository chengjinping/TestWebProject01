<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.cjp.maven</groupId>
	<artifactId>TestWebProject01</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<dependencies>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.0</version>
			<scope>test</scope>
		</dependency>	
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1.3-b06</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.cjp.maven</groupId>
			<artifactId>TestProject01</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		

	</dependencies>
	<!-- 配置当前工程构建过程中的特殊设置 -->
<build>
		<finalName>AtguiguWeb</finalName>  <!-- 最终部署项目名 -->
		<plugins>                                                       <!-- 配置构建过程中需要使用的插件 -->
			<plugin>
				<groupId>org.codehaus.cargo</groupId>    <!-- cargo是一家专门从事启动servlet容器的组织 -->
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>1.4.12</version>
				<configuration>                                                  <!--  针对插件进行的配置-->
					<container> 													    <!--  配置当前系统的容器的位置-->
						<containerId>tomcat7x</containerId>     <!-- tomcat7x匹配下面的tomcat版本-->
						<home>D:\Study\apache-tomcat-7.0.67</home>
					</container>
					<configuration>
						<type>existing</type>                           <!-- 确认上面配置的容器位置是否存在 -->
						<home>D:\Study\apache-tomcat-7.0.67</home>
						<!-- 如果Tomcat端口为默认值8080则不必设置该属性 -->
						<!-- <properties>
							<cargo.servlet.port>8989</cargo.servlet.port>
						</properties> -->
					</configuration>
				</configuration>
				<executions>                                                  <!-- 配置插件在什么情况下执行 -->
					<execution>  
						<id>cargo-run</id>  
						<phase>install</phase>                      <!-- 生命周期的阶段 -->
						<goals>  
							<goal>run</goal>                           <!-- 插件的目标 -->
						</goals>  
					</execution>  
				</executions>
			</plugin>
		</plugins>
	</build>
</project>